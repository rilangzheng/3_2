(复杂的)成员函数在类外定义使用：
    返回类型 类名::函数名（参数）
    void date::setdate(int y,int m,int d)
    （简单的可在类中定义（内联）

访问对象成员：
    对象.
    指针->
    tclass test,*pt=&test;
    pt->x=100;
    test.x=100;

this指针：
    ？？

构造，析构函数：
    new delete
    先创建的对象后析构，类似栈

    复制构造函数：
        参数、返回类类型函数会用到，记得引用
        location(int x=0,int y=0)   //构造
        location(const location &p)   //复制构造

    浅复制和深复制：
        定义复制构造函数，避免浅复制

类的其他成员：
    常成员函数：
        int g()const
        {
            return 0;
        }
        以const为后缀，不能修改数据成员

    静态成员：
        static
        静态数据成员：所有同类共享（需在类外定义初始化）
        静态成员函数:没有隐藏的this指针，不能访问任何非静态成员

    友元：
        函数，类
        friend

类的包含：
    使用“参数初始式”调用类成员构造函数
    构造函数名 （变元表）：数据成员1（变元表），···，数据成员n（变元表）
    {   }
    
运算符重载：
    重载为成员函数：
        返回类型 operator 运算符（参数表）
        {
            //函数体
        }
    重载为友元函数：
        friend 返回类型 operator 运算符（参数表）
        {
            //函数体
        }

    重载为成员函数时，第一个参数为调用对象，无需指定
    重载为友元函数时，第一个参数为调用对象，需指定




杂：
    sizeof () 是长度的运算符，括号中可以放入数据类型或者表达式，一般我们用来计算字符串长度。
    基本用法： 在使用sizeof ()求字符串长度时，会将 ‘0’ 也计算到字符串长度中。 
    例如"abcd"用sizeof ()求长度会计算得到5。

